/*
 * Generated by gdbus-codegen 2.56.0. DO NOT EDIT.
 *
 * The license of this code is the same as for the D-Bus interface description
 * it was derived from.
 */

#ifndef __DBUSTEST_CODE_H__
#define __DBUSTEST_CODE_H__

#include <gio/gio.h>

G_BEGIN_DECLS


/* ------------------------------------------------------------------------ */
/* Declarations for org.example.qdbus.wtest */

#define TYPE_ORG_EXAMPLE_QDBUS_WTEST (org_example_qdbus_wtest_get_type ())
#define ORG_EXAMPLE_QDBUS_WTEST(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST, OrgExampleQdbusWtest))
#define IS_ORG_EXAMPLE_QDBUS_WTEST(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST))
#define ORG_EXAMPLE_QDBUS_WTEST_GET_IFACE(o) (G_TYPE_INSTANCE_GET_INTERFACE ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST, OrgExampleQdbusWtestIface))

struct _OrgExampleQdbusWtest;
typedef struct _OrgExampleQdbusWtest OrgExampleQdbusWtest;
typedef struct _OrgExampleQdbusWtestIface OrgExampleQdbusWtestIface;

struct _OrgExampleQdbusWtestIface
{
  GTypeInterface parent_iface;


  gboolean (*handle_get_value) (
    OrgExampleQdbusWtest *object,
    GDBusMethodInvocation *invocation);

  gboolean (*handle_set_value) (
    OrgExampleQdbusWtest *object,
    GDBusMethodInvocation *invocation,
    gdouble arg_newValue);

  void (*value_changed) (
    OrgExampleQdbusWtest *object,
    gdouble arg_newValue);

};

GType org_example_qdbus_wtest_get_type (void) G_GNUC_CONST;

GDBusInterfaceInfo *org_example_qdbus_wtest_interface_info (void);
guint org_example_qdbus_wtest_override_properties (GObjectClass *klass, guint property_id_begin);


/* D-Bus method call completion functions: */
void org_example_qdbus_wtest_complete_set_value (
    OrgExampleQdbusWtest *object,
    GDBusMethodInvocation *invocation);

void org_example_qdbus_wtest_complete_get_value (
    OrgExampleQdbusWtest *object,
    GDBusMethodInvocation *invocation);



/* D-Bus signal emissions functions: */
void org_example_qdbus_wtest_emit_value_changed (
    OrgExampleQdbusWtest *object,
    gdouble arg_newValue);



/* D-Bus method calls: */
void org_example_qdbus_wtest_call_set_value (
    OrgExampleQdbusWtest *proxy,
    gdouble arg_newValue,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_example_qdbus_wtest_call_set_value_finish (
    OrgExampleQdbusWtest *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_example_qdbus_wtest_call_set_value_sync (
    OrgExampleQdbusWtest *proxy,
    gdouble arg_newValue,
    GCancellable *cancellable,
    GError **error);

void org_example_qdbus_wtest_call_get_value (
    OrgExampleQdbusWtest *proxy,
    GCancellable *cancellable,
    GAsyncReadyCallback callback,
    gpointer user_data);

gboolean org_example_qdbus_wtest_call_get_value_finish (
    OrgExampleQdbusWtest *proxy,
    GAsyncResult *res,
    GError **error);

gboolean org_example_qdbus_wtest_call_get_value_sync (
    OrgExampleQdbusWtest *proxy,
    GCancellable *cancellable,
    GError **error);



/* ---- */

#define TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY (org_example_qdbus_wtest_proxy_get_type ())
#define ORG_EXAMPLE_QDBUS_WTEST_PROXY(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY, OrgExampleQdbusWtestProxy))
#define ORG_EXAMPLE_QDBUS_WTEST_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY, OrgExampleQdbusWtestProxyClass))
#define ORG_EXAMPLE_QDBUS_WTEST_PROXY_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY, OrgExampleQdbusWtestProxyClass))
#define IS_ORG_EXAMPLE_QDBUS_WTEST_PROXY(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY))
#define IS_ORG_EXAMPLE_QDBUS_WTEST_PROXY_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_EXAMPLE_QDBUS_WTEST_PROXY))

typedef struct _OrgExampleQdbusWtestProxy OrgExampleQdbusWtestProxy;
typedef struct _OrgExampleQdbusWtestProxyClass OrgExampleQdbusWtestProxyClass;
typedef struct _OrgExampleQdbusWtestProxyPrivate OrgExampleQdbusWtestProxyPrivate;

struct _OrgExampleQdbusWtestProxy
{
  /*< private >*/
  GDBusProxy parent_instance;
  OrgExampleQdbusWtestProxyPrivate *priv;
};

struct _OrgExampleQdbusWtestProxyClass
{
  GDBusProxyClass parent_class;
};

GType org_example_qdbus_wtest_proxy_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgExampleQdbusWtestProxy, g_object_unref)
#endif

void org_example_qdbus_wtest_proxy_new (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgExampleQdbusWtest *org_example_qdbus_wtest_proxy_new_finish (
    GAsyncResult        *res,
    GError             **error);
OrgExampleQdbusWtest *org_example_qdbus_wtest_proxy_new_sync (
    GDBusConnection     *connection,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);

void org_example_qdbus_wtest_proxy_new_for_bus (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GAsyncReadyCallback  callback,
    gpointer             user_data);
OrgExampleQdbusWtest *org_example_qdbus_wtest_proxy_new_for_bus_finish (
    GAsyncResult        *res,
    GError             **error);
OrgExampleQdbusWtest *org_example_qdbus_wtest_proxy_new_for_bus_sync (
    GBusType             bus_type,
    GDBusProxyFlags      flags,
    const gchar         *name,
    const gchar         *object_path,
    GCancellable        *cancellable,
    GError             **error);


/* ---- */

#define TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON (org_example_qdbus_wtest_skeleton_get_type ())
#define ORG_EXAMPLE_QDBUS_WTEST_SKELETON(o) (G_TYPE_CHECK_INSTANCE_CAST ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON, OrgExampleQdbusWtestSkeleton))
#define ORG_EXAMPLE_QDBUS_WTEST_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_CAST ((k), TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON, OrgExampleQdbusWtestSkeletonClass))
#define ORG_EXAMPLE_QDBUS_WTEST_SKELETON_GET_CLASS(o) (G_TYPE_INSTANCE_GET_CLASS ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON, OrgExampleQdbusWtestSkeletonClass))
#define IS_ORG_EXAMPLE_QDBUS_WTEST_SKELETON(o) (G_TYPE_CHECK_INSTANCE_TYPE ((o), TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON))
#define IS_ORG_EXAMPLE_QDBUS_WTEST_SKELETON_CLASS(k) (G_TYPE_CHECK_CLASS_TYPE ((k), TYPE_ORG_EXAMPLE_QDBUS_WTEST_SKELETON))

typedef struct _OrgExampleQdbusWtestSkeleton OrgExampleQdbusWtestSkeleton;
typedef struct _OrgExampleQdbusWtestSkeletonClass OrgExampleQdbusWtestSkeletonClass;
typedef struct _OrgExampleQdbusWtestSkeletonPrivate OrgExampleQdbusWtestSkeletonPrivate;

struct _OrgExampleQdbusWtestSkeleton
{
  /*< private >*/
  GDBusInterfaceSkeleton parent_instance;
  OrgExampleQdbusWtestSkeletonPrivate *priv;
};

struct _OrgExampleQdbusWtestSkeletonClass
{
  GDBusInterfaceSkeletonClass parent_class;
};

GType org_example_qdbus_wtest_skeleton_get_type (void) G_GNUC_CONST;

#if GLIB_CHECK_VERSION(2, 44, 0)
G_DEFINE_AUTOPTR_CLEANUP_FUNC (OrgExampleQdbusWtestSkeleton, g_object_unref)
#endif

OrgExampleQdbusWtest *org_example_qdbus_wtest_skeleton_new (void);


G_END_DECLS

#endif /* __DBUSTEST_CODE_H__ */
